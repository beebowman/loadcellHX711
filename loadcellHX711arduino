//Modified by: Bo Bowman 

//This code works for either Arduino Nano Every, or for Arduino Uno R3. Both will work. 

//Setup Steps: 
//Create a sketch with this code. Go to Tools > Board > Arduino MegaAVR Boards > Arduino Nano Every 
//Then go to Tools > Port and select the right port (Arduino Nano Every port on Apple/Mac, COM on Windows)
//Go to Sketch > Include Library > Manage Libraries > search for HX711 > choose HX711 by Rob Tillaart 
//Run the code and then go to Tools > Serial Monitor to view the output 


// /*
//   Rui Santos
//   Complete project details at https://RandomNerdTutorials.com/arduino-load-cell-hx711/
//   Permission is hereby granted, free of charge, to any person obtaining a copy
//   of this software and associated documentation files.
//   The above copyright notice and this permission notice shall be included in all
//   copies or substantial portions of the Software.
// */

// //INSTRUCTIONS: Connnect E+ to red, E- to black, A- to white, and A+ to green, connecting HX711 to teh load cell wires 
// //Connect GND of HX711 to GND of Arduino Nano Every
// //Connect DT (data / DAT) of HX711 to Pin 3 of Arduino Nano Every 
// //Connect SCK or CLK of HX711 into Pin 5 of Arduino Nano Every 
// //Connect VCC of HX711 to 5V pin of Arduino Nano Every

//First, uncomment section A of the code to find the calibration factor, with section B commented with '//' before each line. 
//Calibration factor, which is the reading for known weight (such as 3881, a number that gets spit out by the code) divided by known weight that you have weighed, such as 0.936lbs)
//Then, comment out section A with //'s and uncomment section B, entering the correct calibration factor. 

//Troubleshooting tips: 
// - If you are getting a "0" reading for your load cell, it might mean you didn't solder the headers to the HX711 board correctly. Re-solder a new HX711 board correctly, and it should fix the issue. 
// - If you are getting garbled text in the Serial Monitor, check that you have selected 57600 baud rate both in the code and in the serial monitor menu. 


////****SECTION A OF THE CODE: 

// // Calibrating the load cell
// #include "HX711.h"
// #include <HX711.h>

// // HX711 circuit wiring
// const int LOADCELL_DOUT_PIN = 3; 
// const int LOADCELL_SCK_PIN = 5; 

// HX711 scale;

// void setup() {
//   Serial.begin(57600);
//   scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
// }

// void loop() {

//   if (scale.is_ready()) {
//     scale.set_scale();    
//     Serial.println("Tare... remove any weights from the scale.");
//     delay(5000); //wait 5 seconds 
//     scale.tare();
//     Serial.println("Tare done...");
//     Serial.print("Place a known weight on the scale...");
//     delay(5000); //wait 5 seconds 
//     long reading = scale.get_units(10);
//     Serial.print("Result: ");
//     Serial.println(reading);
//   } 
//   else {
//     Serial.println("HX711 not found.");
//   }
//   delay(1000);
// }
// //calibration factor will be the (reading)/(known weight)



// //Result of calibration: 0.936 lb (iPhone 13 mini) on the scale gave a value of 3881. 
// //Therefore, the calibration factor is (reading)/(known weight) = 3881/0.936, and output is in units of lbs. 








////****SECTION B OF THE CODE: 

// CODE FOR ACTUALLY USING THE LOAD CELL: (ENTER CALIBRATION WEIGHT BELOW)

/**
 * Complete project details at https://RandomNerdTutorials.com/arduino-load-cell-hx711/
 *
 * HX711 library for Arduino - example file
 * https://github.com/bogde/HX711
 *
 * MIT License
 * (c) 2018 Bogdan Necula
 *
**/

#include <Arduino.h>
#include "HX711.h"

// HX711 circuit wiring
const int LOADCELL_DOUT_PIN = 3; //Connect pin 2 to DT (data) pin on the HX711
const int LOADCELL_SCK_PIN = 5; //Connect pin 3 to the SCK (clock) pin on the HX711
//NOTE: SCK is the same as CLK in this case on this board, so connect pin 3 to CLK 

HX711 scale;

void setup() {
  Serial.begin(57600);
  Serial.println("HX711 Demo");
  Serial.println("Initializing the scale");

  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN); //calling the data (DAT) & clock (SCK/CLK) pins

  Serial.println("Before setting up the scale:");
  Serial.print("read: \t\t");
  Serial.println(scale.read());      // print a raw reading from the ADC

  Serial.print("read average: \t\t");
  Serial.println(scale.read_average(20));   // print the average of 20 readings from the ADC

  Serial.print("get value: \t\t");
  Serial.println(scale.get_value(5));   // print the average of 5 readings from the ADC minus the tare weight (not set yet)

  Serial.print("get units: \t\t");
  Serial.println(scale.get_units(5), 1);  // print the average of 5 readings from the ADC minus tare weight (not set) divided
            // by the SCALE parameter (not set yet)
            
  //*****BELOW IS WHERE YOU ENTER THE CALIBRATION FACTOR, you have to change it!!!!
  scale.set_scale(4146.367); //= reading for known weight divided by known weight (such as 3881/0.936lbs)
  //scale.set_scale(-471.497);                      // this value is obtained by calibrating the scale with known weights; see the README for details
  scale.tare();               // reset the scale to 0 

  Serial.println("After setting up the scale:");

  Serial.print("read: \t\t");
  Serial.println(scale.read());                 // print a raw reading from the ADC

  Serial.print("read average: \t\t");
  Serial.println(scale.read_average(20));       // print the average of 20 readings from the ADC

  Serial.print("get value: \t\t");
  Serial.println(scale.get_value(5));   // print the average of 5 readings from the ADC minus the tare weight, set with tare()

  Serial.print("get units: \t\t");
  Serial.println(scale.get_units(5), 1);        // print the average of 5 readings from the ADC minus tare weight, divided
            // by the SCALE parameter set with set_scale

  Serial.println("Readings:");
}

void loop() {
  Serial.print("one reading:\t");
  Serial.print(scale.get_units(), 1);
  Serial.print("\t| average:\t");
  Serial.println(scale.get_units(10), 5);

  delay(5000);
}
